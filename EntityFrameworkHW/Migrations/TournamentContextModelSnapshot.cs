// <auto-generated />
using EntityFramework.Types.Tournament;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkHW.Migrations
{
    [DbContext(typeof(TournamentContext))]
    partial class TournamentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityFramework.Types.Tournament.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<int>("MissedGoals")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("ScoredGoals")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Draws = 8,
                            Losses = 9,
                            MissedGoals = 0,
                            Name = "Spain",
                            Position = 1,
                            ScoredGoals = 0,
                            Wins = 10
                        },
                        new
                        {
                            Id = 2,
                            Draws = 8,
                            Losses = 10,
                            MissedGoals = 0,
                            Name = "Norway",
                            Position = 2,
                            ScoredGoals = 0,
                            Wins = 9
                        },
                        new
                        {
                            Id = 3,
                            Draws = 9,
                            Losses = 10,
                            MissedGoals = 0,
                            Name = "France",
                            Position = 3,
                            ScoredGoals = 0,
                            Wins = 8
                        },
                        new
                        {
                            Id = 4,
                            Draws = 9,
                            Losses = 12,
                            MissedGoals = 0,
                            Name = "Germany",
                            Position = 4,
                            ScoredGoals = 0,
                            Wins = 6
                        },
                        new
                        {
                            Id = 5,
                            Draws = 10,
                            Losses = 13,
                            MissedGoals = 0,
                            Name = "Austria",
                            Position = 5,
                            ScoredGoals = 0,
                            Wins = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
